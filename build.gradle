buildscript {
    ext {
        springBootVersion = '2.0.7.RELEASE'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    group = 'org.yungu'
    version = '0.0.1'

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    ext{
        projectVersion = '0.1.3'
        projectProfile = 'SNAPSHOT'
        courseManagerProjectVersion = '0.0.1'
        courseManagerProjectProfile = 'SNAPSHOT'
        chooseCourseProjectVersion = '0.0.2'
        chooseCourseProjectProfile = 'SNAPSHOT'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://www.w3.org/2001/XMLSchema-instance' }
        maven {
            url 'https://mvn.yungu-inc.org/repository/yungu-public/'
            credentials {
                username 'yungu-dev'
                password 'YuDe@153022'
            }
        }
    }

}

ext{
    springBootTestVersion = '2.0.7.RELEASE'
    mybatisVersion = '2.0.0'
    dubboVersion='2.6.5'
    zookpeerVersion = '0.10'

}
configurations{
    compile.exclude module: 'org.apache.logging.log4j'
}
//这里的配置对子项目生效
subprojects {
    apply plugin: 'eclipse'
    apply plugin: 'org.springframework.boot'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
/*每次构建是向资源库中检查并更新 */
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
    // mapstruct gradle的配置。暂时不知道干嘛的
    tasks.withType(JavaCompile) {
        options.compilerArgs = [
                '-Amapstruct.suppressGeneratorTimestamp=true'
        ]
    }

    dependencies{
        compile fileTree(dir: 'lib', include: ['*.jar'])
        //====================================================
        compile('org.springframework.boot:spring-boot-starter-web'){
            exclude group: "org.slf4j"
            exclude group: "org.apache.logging.log4j"
        }
        compile('org.springframework.boot:spring-boot-starter-logging'){
            exclude group: "org.slf4j"
            exclude group: "org.apache.logging.log4j"
        }
        compile("org.springframework.boot:spring-boot-starter-thymeleaf"){
            exclude group: "org.slf4j"
            exclude group: "org.apache.logging.log4j"
        }
        compile('org.springframework.boot:spring-boot-starter-aop'){
            exclude group: "org.slf4j"
            exclude group: "org.apache.logging.log4j"
        }
        testCompile("org.springframework.boot:spring-boot-starter-test:${springBootTestVersion}") {
            exclude group: "com.vaadin.external.google"
        }

        //mybatis
        compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisVersion}")
        compile("mysql:mysql-connector-java")
        // guava-retrying

        // https://mvnrepository.com/artifact/com.google.code.gson/gson
        implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
// https://mvnrepository.com/artifact/com.aliyun/aliyun-java-sdk-ecs
        implementation group: 'com.aliyun', name: 'aliyun-java-sdk-ecs', version: '4.24.18'
// https://mvnrepository.com/artifact/com.aliyun/aliyun-java-sdk-core
        implementation group: 'com.aliyun', name: 'aliyun-java-sdk-core', version: '4.6.0'

        //dubbo
        compile("com.alibaba:dubbo:${dubboVersion}")
        //zookeeper
        compile("com.101tec:zkclient:${zookpeerVersion}") {
            exclude group: "org.slf4j"
            exclude group: "log4j"
        }

        compile("org.yungu:user-service-api:3.7.0-RELEASE")
        implementation 'commons-beanutils:commons-beanutils:1.9.4'
        //http post
        compile("org.apache.httpcomponents:fluent-hc:4.5.3")
        compileOnly "org.projectlombok:lombok:1.16.20"

    }
}

